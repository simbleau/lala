{
  "swagger": "2.0",
  "info": {
    "description": "This is the API spec for interfacing externally with this alarm system. Check-ins for servers and responders must occur within every 15 minutes.",
    "version": "1.0.0",
    "title": "Alarmy",
    "contact": {
      "email": "spencer@imbleau.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/simbleau/lala/blob/main/LICENSE"
    }
  },
  "host": "0.0.0.0",
  "basePath": "/",
  "tags": [
    {
      "name": "systems",
      "description": "Everything about alarm servers"
    },
    {
      "name": "signals",
      "description": "Everything about querying alarm servers"
    },
    {
      "name": "history",
      "description": "Everything about alarm history"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/servers": {
      "get": {
        "tags": [
          "systems"
        ],
        "summary": "Return a list of hosting servers",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "required": false,
            "description": "The limit of servers to respond with."
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Host"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "systems"
        ],
        "summary": "Register your address as a hosting server",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Host"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/status": {
      "post": {
        "tags": [
          "signals"
        ],
        "summary": "Return the status of an alarm host",
        "parameters": [
          {
            "in": "query",
            "name": "server",
            "type": "string",
            "format": "ip",
            "required": true,
            "description": "The server to query"
          }
        ],
        "responses": {
          "200": {
            "description": "Alarm status was successfully retrieved",
            "schema": {
              "$ref": "#/definitions/AlarmStatus"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/signal": {
      "post": {
        "tags": [
          "signals"
        ],
        "summary": "Signal an alarm host",
        "parameters": [
          {
            "in": "query",
            "name": "server",
            "type": "string",
            "format": "ip",
            "required": true,
            "description": "The server to alert"
          }
        ],
        "responses": {
          "204": {
            "description": "Alarm was successfully triggered"
          },
          "304": {
            "description": "Alarm was already on"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/silence": {
      "post": {
        "tags": [
          "signals"
        ],
        "summary": "Signal an alarm host",
        "parameters": [
          {
            "in": "query",
            "name": "server",
            "type": "string",
            "format": "ip",
            "required": true,
            "description": "The server to silence"
          }
        ],
        "responses": {
          "204": {
            "description": "Alarm was successfully silenced"
          },
          "304": {
            "description": "Alarm was already off"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/history": {
      "get": {
        "tags": [
          "history"
        ],
        "summary": "Return alarm history for a host",
        "parameters": [
          {
            "in": "query",
            "name": "server",
            "type": "string",
            "format": "ip",
            "required": true,
            "description": "The server to query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HistoryEntry"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "AlarmStatus": {
      "type": "boolean",
      "description": "Whether the alarm is acknowledged; true if acknowledged, false otherwise."
    },
    "Host": {
      "type": "object",
      "properties": {
        "addr": {
          "type": "string",
          "format": "ipv4",
          "description": "A string value representing an IP address, in either IPv4 (RFC 791) or IPv6 (RFC 8200) format."
        },
        "last-checkin": {
          "type": "string",
          "format": "date-time",
          "description": "A string value representing a date, which is an IETF-compliant RFC 2822 timestamp."
        }
      }
    },
    "HistoryEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The unique id of this history entry."
        },
        "type": {
          "type": "string",
          "enum": [
            "server",
            "client",
            "ack",
            "code-1"
          ],
          "description": "One of several values representing the type of history entry this object represents."
        },
        "host": {
          "type": "string",
          "format": "ip",
          "description": "A string value representing an IP address, in either IPv4 (RFC 791) or IPv6 (RFC 8200) format."
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "A string value representing a date, which is an IETF-compliant RFC 2822 timestamp."
        }
      }
    }
  }
}